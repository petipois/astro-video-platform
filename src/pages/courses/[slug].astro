---
import type { GetStaticPaths } from "astro";
import CourseLayout from "@/layouts/CourseLayout.astro";
import { getCollection, getEntry } from "astro:content";
import { MuxPlayer } from "@mux/mux-player-astro";
import Button from "@/components/starwind/button";
// Define dynamic paths
export const getStaticPaths = (async () => {
  const courses = await getCollection("courses");

  return courses.map((course: any) => ({
    params: { slug: course.data.slug },
  }));
}) satisfies GetStaticPaths;

// Get the course data
const { slug } = Astro.params;
const course = await getEntry("courses", slug!);

if (!course) {
  return Astro.redirect("/404");
}
---

<CourseLayout>
  
      <!-- Header Section -->
      <div class="mb-12 text-center">
        <h1
          class="text-5xl font-bold text-gray-900 mb-6 bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent"
        >
          {course.data.title}
        </h1>
        <p class="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
          {course.data.description}
        </p>
      </div>

      <div class="grid lg:grid-cols-3 gap-12 max-w-7xl mx-auto">
        <!-- Sidebar -->
        <aside class="lg:col-span-1">
          <div class="sticky top-8">
            <!-- Course Info Card -->
            <div
              class="bg-white rounded-2xl shadow-xl p-6 border border-gray-100 mb-6"
            >
              <div class="flex items-center gap-3 mb-4">
                <div
                  class="w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg flex items-center justify-center"
                >
                  <svg
                    class="w-5 h-5 text-white"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"
                    ></path>
                  </svg>
                </div>
                <h3 class="text-lg font-semibold text-gray-800">
                  Course Details
                </h3>
              </div>

              <div class="space-y-3 text-sm">
                <div class="flex justify-between">
                  <span class="text-gray-500">Duration</span>
                  <span class="font-medium text-gray-800"
                    >{course.data.duration || "Self-paced"}</span
                  >
                </div>
                <div class="flex justify-between">
                  <span class="text-gray-500">Level</span>
                  <span class="font-medium text-gray-800"
                    >{course.data.level || "Intermediate"}</span
                  >
                </div>
              </div>
            </div>

            <!-- Lessons List -->
            {
              course.data.lessons && (
                <div class="bg-white rounded-2xl shadow-xl p-6 border border-gray-100">
                  <div class="flex items-center gap-3 mb-6">
                    <div class="w-10 h-10 bg-gradient-to-br from-green-500 to-blue-500 rounded-lg flex items-center justify-center">
                      <svg
                        class="w-5 h-5 text-white"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"
                        />
                      </svg>
                    </div>
                    <h3 class="text-lg font-semibold text-gray-800">
                      Course Lessons
                    </h3>
                  </div>

                  <div class="space-y-3">
                    {course.data.lessons.map((lesson: any, index: number) => (
                      <div class="group flex items-center gap-3 p-3 rounded-lg hover:bg-gray-50 transition-colors cursor-pointer">
                      <div class="flex-shrink-0 w-8 h-8 bg-gray-100 group-hover:bg-blue-100 rounded-full flex items-center justify-center transition-colors">
                          <span class="text-sm font-medium text-gray-600 group-hover:text-blue-600">
                            {index + 1}
                          </span>
                        </div>
                        <div class="flex-1 min-w-0">
                         <a href=`/courses/${slug}/${lesson.number}`>  <h4 class="text-sm font-medium text-gray-800 group-hover:text-blue-600 transition-colors truncate">
                            {lesson.title}
                          </h4></a>
                          {lesson.duration && (
                            <p class="text-xs text-gray-500 mt-1">
                              {lesson.duration}
                            </p>
                          )}
                        </div>
                        <svg
                          class="w-4 h-4 text-gray-400 group-hover:text-blue-500 transition-colors"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M9 5l7 7-7 7"
                          />
                        </svg>
                      </div>
                    ))}
                  </div>
                </div>
              )
            }

            <!-- Action Buttons -->
            <div class="mt-6 space-y-3">
              <button
                class="w-full bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold py-3 px-6 rounded-xl hover:from-blue-700 hover:to-purple-700 transition-all duration-200 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5"
              >
                Start Course
              </button>
              <button
                class="w-full border-2 border-gray-200 text-gray-700 font-semibold py-3 px-6 rounded-xl hover:bg-gray-50 hover:border-gray-300 transition-colors"
              >
                Add to Favorites
              </button>
            </div>
          </div>
        </aside>
        <!-- Course Content -->
        <div class="lg:col-span-2">
          <div
            class="bg-white rounded-2xl shadow-xl p-8 border border-gray-100"
          >
            <div class="prose prose-lg max-w-none">
              <div class="mb-8">
                <div class="flex items-center gap-3 mb-4">
                  <div class="w-2 h-2 bg-blue-500 rounded-full"></div>
                  <h2 class="text-2xl font-semibold text-gray-800 m-0">
                    Course Overview
                  </h2>
                </div>
                <p class="text-gray-600 text-lg leading-relaxed">
                  {course.data.description}
                </p>
              </div>

              <!-- Course Content Body -->
              <div class="border-t pt-8">
                <Fragment set:html={course.body} />
              </div>
              <MuxPlayer
                playbackId={course.data.lessons[0].videoId}
                metadata={{ video_title: "My Video" }}
              />
            </div>
          </div>
        </div>
      </div></CourseLayout
>
